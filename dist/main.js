(()=>{"use strict";var t=function(){function t(t){this.context=t,this.program=t.createProgram()}return t.prototype.attachShaderFromString=function(e,r){var n;switch(r){case t.shaderTypes.VERTEX:n=this.context.VERTEX_SHADER;break;case t.shaderTypes.FRAGMENT:n=this.context.FRAGMENT_SHADER;break;default:throw"Cant implement shadertype: ".concat(r," in func attachShaderFromString!")}var o=this.context.createShader(n);if(this.context.shaderSource(o,e),this.context.compileShader(o),!this.context.getShaderParameter(o,this.context.COMPILE_STATUS)){var i=this.context.getShaderInfoLog(o);throw"Could not compile shader ".concat(r,". \n\n").concat(i)}this.context.attachShader(this.program,o)},t.prototype.useProgram=function(){if(this.context.linkProgram(this.program),!this.context.getProgramParameter(this.program,this.context.LINK_STATUS)){var t=this.context.getProgramInfoLog(this.program);throw"Could not compile WebGL program. \n\n".concat(t)}this.context.useProgram(this.program)},t.prototype.getAttributeLocation=function(t){return this.useProgram(),this.context.getAttribLocation(this.program,t)},t}();!function(t){var e;(e=t.shaderTypes||(t.shaderTypes={}))[e.VERTEX=0]="VERTEX",e[e.FRAGMENT=1]="FRAGMENT"}(t||(t={}));var e=function(){function e(t){this.canvas=t,this.context=t.getContext("experimental-webgl"),this.shaderProgramHelper=null}return e.prototype.makeSeededProgramWrapper=function(){return new t(this.context)},e.prototype.attachProgramWrapper=function(t){this.shaderProgramHelper=t},e.prototype.buildAndPushArrayBuffer=function(t){var e=this.context.createBuffer();return this.context.bindBuffer(this.context.ARRAY_BUFFER,e),this.context.bufferData(this.context.ARRAY_BUFFER,t,this.context.STATIC_DRAW),this.context.bindBuffer(this.context.ARRAY_BUFFER,null),e},e.prototype.buildAndPushElementArrayBuffer=function(t){var e=this.context.createBuffer();return this.context.bindBuffer(this.context.ELEMENT_ARRAY_BUFFER,e),this.context.bufferData(this.context.ELEMENT_ARRAY_BUFFER,t,this.context.STATIC_DRAW),this.context.bindBuffer(this.context.ELEMENT_ARRAY_BUFFER,null),e},e.prototype.bindAttributeNameToBuffer=function(t,e,r,n,o,i){if(null==this.shaderProgramHelper)throw"No shader program to try and attach attribute ".concat(e," to!");this.context.bindBuffer(this.context.ARRAY_BUFFER,t);var a=this.shaderProgramHelper.getAttributeLocation(e);this.context.vertexAttribPointer(a,r,this.context.FLOAT,n,o,i),this.context.enableVertexAttribArray(a),this.context.bindBuffer(this.context.ARRAY_BUFFER,null)},e.prototype.draw=function(t,e){this.context.bindBuffer(this.context.ELEMENT_ARRAY_BUFFER,t),this.context.clearColor(0,0,0,1),this.context.enable(this.context.DEPTH_TEST),this.context.clear(this.context.COLOR_BUFFER_BIT),this.context.viewport(0,0,this.canvas.width,this.canvas.height),this.context.drawElements(this.context.TRIANGLES,e,this.context.UNSIGNED_SHORT,0)},e}(),r=[0,1,2],n=document.getElementById("screen");n.width=300,n.height=300;var o=new e(n),i=o.makeSeededProgramWrapper();i.attachShaderFromString("\n                attribute vec3 vertex_position;\n                attribute vec3 vertex_color;\n\n                varying vec3 vColor;\n            \n                void main() {\n            \n                    gl_Position = vec4(vertex_position, 1.0);\n                    vColor = vertex_color;\n                }\n            ",t.shaderTypes.VERTEX),i.attachShaderFromString("\n            precision highp float;\n            varying vec3 vColor;\n\n            void main() {\n            \n                gl_FragColor = vec4(vColor, 1.0); // return reddish-purple\n            }\n        ",t.shaderTypes.FRAGMENT),o.attachProgramWrapper(i);var a=o.buildAndPushArrayBuffer(new Float32Array([-.5,.5,0,-.5,-.5,0,.5,-.5,0])),h=o.buildAndPushArrayBuffer(new Float32Array([1,0,0,0,1,0,0,0,1])),c=o.buildAndPushElementArrayBuffer(new Uint16Array(r));o.bindAttributeNameToBuffer(a,"vertex_position",3,!1,0,0),o.bindAttributeNameToBuffer(h,"vertex_color",3,!1,0,0),o.draw(c,r.length)})();